NEXT_PUBLIC_CDP_API_KEY=YOUR_PUBLIC_API_KEY
NEXT_PUBLIC_CDP_API_KEY
VITE_PUBLIC_ONCHAINKIT_API_KEY
ASTRO_PUBLIC_ONCHAINKIT_API_KEY
NEXT_PUBLIC_ONCHAINKIT_API_KEY
VERSECHARGEHANDLE
NEXT_PUBLIC_COINBASE_COMMERCE_API_KEY

import yfinance as yf

# Download data for multiple stocks
data = yf.download(["AAPL", "MSFT", "GOOG"], start="2023-01-01", end="2023-12-31")
print(data)


import requests

url = "https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-summary"
querystring = {"symbol": "AAPL", "region": "US"}
headers = {
    "X-RapidAPI-Key": "YOUR_RAPIDAPI_KEY",
    "X-RapidAPI-Host": "apidojo-yahoo-finance-v1.p.rapidapi.com"
}
response = requests.get(url, headers=headers, params=querystring)
print(response.json())


import yfinance as yf

# Get dividend and split history
stock = yf.Ticker("AAPL")
dividends = stock.dividends
splits = stock.splits
print("Dividends:\n", dividends)
print("Splits:\n", splits)

import pandas_datareader as pdr
from datetime import datetime

start = datetime(2023, 1, 1)
end = datetime(2023, 4, 1)
data = pdr.get_data_yahoo("AAPL", start=start, end=end)
print(data)

import blpapi

# Initialize the Bloomberg session
SESSION_HOST = "localhost"
SESSION_PORT = 8194

# Start a session
session = blpapi.SessionOptions()
session.setServerHost(SESSION_HOST)
session.setServerPort(SESSION_PORT)
session = blpapi.Session(session)

if not session.start():
    print("Failed to start session.")
    exit()

if not session.openService("//blp/refdata"):
    print("Failed to open service.")
    exit()

# Reference data service
refDataSvc = session.getService("//blp/refdata")
request = refDataSvc.createRequest("ReferenceDataRequest")

# Add securities and fields
request.getElement("securities").appendValue("AAPL US Equity")
request.getElement("fields").appendValue("PX_LAST")  # Last price
request.getElement("fields").appendValue("PX_VOLUME")  # Volume

# Send the request
session.sendRequest(request)

# Process the response
while True:
    event = session.nextEvent()
    for msg in event:
        print(msg)
    if event.eventType() == blpapi.Event.RESPONSE:
        break

import yfinance as yf

# Fetch historical data for Apple (AAPL)
stock = yf.Ticker("AAPL")
historical_data = stock.history(period="6mo")  # Options: 1d, 5d, 1mo, 6mo, 1y, 5y, max
print(historical_data)

import yfinance as yf

# Get stock information
stock = yf.Ticker("AAPL")
print(stock.info)

# Get historical data
data = stock.history(period="1mo")
print(data)

pip install yfinance